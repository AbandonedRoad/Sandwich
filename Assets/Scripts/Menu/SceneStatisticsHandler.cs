//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using UnityEngine;
using Singletons;
using UnityEngine.UI;
using System.Reflection.Emit;
using Singleton;
using LevelCreation;

namespace Menu
{
	public class SceneStatisticsHandler : MonoBehaviour
	{
		public GameObject Panel 
		{
			get { return _sceneStatisticsPanel; }
		}
		
		private GameObject _sceneStatisticsPanel;
		private Button _nextLevelButton;
		private Button _exitButton;
		
		/// <summary>
		/// Start this instance.
		/// </summary>
		void Start()
		{
			_sceneStatisticsPanel = GameObject.Find("SceneStatisticsPanel");
			
			_nextLevelButton = _sceneStatisticsPanel.GetComponentsInChildren<Button>().First(btn => btn.name == "NextButton");
			_exitButton = _sceneStatisticsPanel.GetComponentsInChildren<Button>().First(btn => btn.name == "ExitButton");
			
			// This is a setup for a button that grabs the field value when pressed
			_nextLevelButton.onClick.AddListener(() => NextLevel());
			_exitButton.onClick.AddListener(() => ExitGame());
			
			SwitchSceneEndPanel ();
		}
		
		/// <summary>
		/// Switchs the scene end panel.
		/// </summary>
		public void SwitchSceneEndPanel ()
		{
			_sceneStatisticsPanel.SetActive(!_sceneStatisticsPanel.activeSelf);
			if (_sceneStatisticsPanel.activeSelf)
			{
				_sceneStatisticsPanel.transform.SetAsLastSibling();
			}
		}
		
		/// <summary>
		/// Adapts the worker speed.
		/// </summary>
		/// <param name="newValue">New value.</param>
		private void NextLevel()
		{			
			HelperSingleton.Instance.DestroyLevel();

			var levelGenerator = new LevelGenerator(60);
			levelGenerator.CreateNewLevel();
			
			while(PrefabSingleton.Instance.ScreenFader.IsBlack)
			{
				PrefabSingleton.Instance.ScreenFader.RestartScene();
			}
			
			PlayerSingleton.Instance.PlayerHealth = PlayerSingleton.Instance.TotalHealth;
			SwitchSceneEndPanel();
		}
		
		/// <summary>
		/// Adapts the worker speed.
		/// </summary>
		/// <param name="newValue">New value.</param>
		private void ExitGame()
		{
			
		}
	}
}